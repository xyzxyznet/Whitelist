local keys = {
"dfJuujlV7HhPMpPm6CMR",    
"d6vtfGk0gJuhFzohVRis",
"hQwqe2fpVDyC4StuxqKc",
"wEaLsHE8oNHaENhKo2Hc",
"k9vrCrPMS9zdnHECtQdE",
"eLsRHcN0XjvOmJPIdmOx",
"0lttn6Y9bzsLgURIDIRu",
"LZrJoEsLhGw3QcLPjpz4",
"wMznOBLDkzWLvW4nagYT",
"7j0VIqP8P9p73zHfLBon",
"8kyERhFmHL4HwqbzlOpc",
"e6QoPEdaUYWP744Vizka",
}
if keys[_G.Key] then
local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/miroeramaa/TurtleLib/main/TurtleUiLib.lua"))()
wait(2)

local P = library:Window("Polk")
local D = library:Window("Misc")
local E = library:Window("Extra")

P:Button("Reset", function()
game.Players.LocalPlayer.Character.Humanoid.Health = 0
end)
P:Button("Insta Log", function()
game.Players.LocalPlayer:Kick("Insta Logged")
end)
P:Button("Server Hop", function()
local HttpService, TPService = game:GetService"HttpService", game:GetService"TeleportService";
local OtherServers = HttpService:JSONDecode(game:HttpGet("https://games.roblox.com/v1/games/"..game.PlaceId.."/servers/Public?sortOrder=Asc&limit=100"))
for Index, Server in next, OtherServers["data"] do
   if Server ~= game.JobId then
       print(Server["id"])
       TPService:TeleportToPlaceInstance(game.PlaceId, Server["id"])
       break
   end
end
end)
P:Button("Rejoin", function()
game:GetService("TeleportService"):Teleport(game.PlaceId, game:GetService("Players").LocalPlayer)
end)
P:Toggle("Flight", false, function(bool)
 repeat wait() until game.Players.LocalPlayer.Character

local fanim = Instance.new('Animation', workspace)
fanim.AnimationId = 'rbxassetid://7754436527'
local ianim = Instance.new('Animation', workspace)
ianim.AnimationId = 'rbxassetid://7754436527'

local player = game.Players.LocalPlayer
local character = player.character
local humanoid = character:WaitForChild("Humanoid")
local torso = character:WaitForChild("Torso")
local mouse = player:GetMouse()

local track1 = humanoid:LoadAnimation(fanim)
local track2 = humanoid:LoadAnimation(ianim)

local enabled = false

mouse.KeyDown:Connect(function(key)
    if key == "x" then
        if enabled == false then
            enabled = true
            if track1.IsPlaying then track1:Stop() end
            if not track2.IsPlaying then track2:Play() end
            local bodyvelocity = Instance.new("BodyVelocity",torso)
            bodyvelocity.MaxForce = Vector3.new(math.huge,math.huge,math.huge)

            while enabled == true do
                if torso.Velocity.magnitude>0 then
                    if track2.IsPlaying then track2:Stop() end
                    if not track1.IsPlaying then track1:Play() end
                end
                bodyvelocity.Velocity = mouse.Hit.lookVector * 200
                wait()
            end

        end

        if enabled == true then
            track2:Stop()
            track1:Stop()            
            enabled = false
            torso:FindFirstChildOfClass("BodyVelocity"):Destroy()
        end
    end
end)
end)
P:Toggle("No fall", false, function(bool)
while true do 
wait(2)
local char = game.Players.LocalPlayer.Character
char.FallDamage.Disabled = true
end
print(bool)
end)
P:Toggle("Noclip", false, function(bool)
noclip = false
game:GetService('RunService').Stepped:connect(function()
if noclip then
game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
end
end)
plr = game.Players.LocalPlayer
mouse = plr:GetMouse()
mouse.KeyDown:connect(function(key)

if key == "n" then
noclip = not noclip
game.Players.LocalPlayer.Character.Humanoid:ChangeState(11)
end
end)
end)
P:Toggle("Max Zoom", false, function(bool)
game.Players.LocalPlayer.CameraMaxZoomDistance = 1500
end)
P:Toggle("No Fog", false, function(bool)
   game:GetService("Lighting").FogEnd = 100000
end)
D:Button("Sell Items", function()
game:GetService("ReplicatedStorage").BulkSell:FireServer()
end)
D:Button("Castle Rock", function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(5759.45, 365.835, 622.01)
wait(4)
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(5759.81, 330.507, 614.238)
wait(0.5)
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(5744.17, 321.554, 637.572)
wait(0.5)
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(1381.02, 211.35, 854.658)
end)
D:Button("Skycastle", function()
game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(1330.27, 3807.5, 6627.19)
end)
D:Toggle("No Kill Bricks", false, function(bool)
game:GetService("Workspace").Map.KillBricks:Destroy()
end)
D:Toggle("Bag Autopickup", false, function(bool)
for i,v in pairs(game:GetService("Workspace").DroppedBags:GetChildren()) do
wait()
if (v.CFrame.p-game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.p).magnitude<=math.huge then
v.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
v.CanCollide = false
end
end
end)
D:Toggle("Autopickup", false, function(bool)
pcall(function()
    local Players               = game:GetService'Players';
    local LocalPlayer           = Players.LocalPlayer;
    local Camera                = workspace.CurrentCamera;
    local RunService            = game:GetService'RunService';
    local UIS                   = game:GetService'UserInputService';
    local NearestObject         = nil;
    local LastObject            = NearestObject;
    local LastCheck             = 0;
    local TrinketAP             = true;
    local Enabled               = true; 
    shared.Blacklist            = shared.Blacklist or {};
     
    local Clickables = {};
    local TP = {};
    local Trinkets = {};
     
     
    for i, v in pairs(workspace:GetDescendants()) do
        if v.ClassName == 'ClickDetector' and (v.Parent:IsA'BasePart' or v.Parent:IsA'UnionOperation') then
            table.insert(Clickables, v.Parent);
            TP[tostring(v.Parent.Position)] = v;
        end
    end
     
    for i, v in pairs(workspace:GetChildren()) do
        if (v:IsA'BasePart' or v:IsA'UnionOperation') and TP[tostring(v.Position)] ~= nil then
            -- Trinkets[#Trinkets + 1] = {v, }
            table.insert(Trinkets, v);
        end
    end
     
    if shared.WSDC then shared.WSDC:disconnect(); end
     
    shared.WSDC = workspace.DescendantAdded:connect(function(child)
        if (child:IsA'BasePart' or child:IsA'UnionOperation') and wait(1 / 3) then
            if child:FindFirstChildOfClass'ClickDetector' then
                table.insert(Clickables, child);
                TP[tostring(child.Position)] = child:FindFirstChildOfClass'ClickDetector';
            end
            if TP[tostring(child.Position)] ~= nil then
                table.insert(Trinkets, child);
            end
        end
    end);
     
    function GetNearestObject()
        if #Trinkets < 1 then return false; end
     
        local Closest = Trinkets[math.random(#Trinkets)];
        local Distance = (Camera.CFrame.p - Closest.Position).magnitude;
     
        for i, v in pairs(Trinkets) do
            local LDistance = (Camera.CFrame.p - v.Position).magnitude;
            if TrinketAP and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild'Head' and (LocalPlayer.Character.Head.Position - v.Position).magnitude <= 15 and TP[tostring(v.Position)] then
                fireclickdetector(TP[tostring(v.Position)]);
            end
            if LDistance < Distance and not shared.Blacklist[v] and v:IsDescendantOf(workspace) then
                Distance = LDistance;
                Closest = v;
            end
        end
     
        return Closest;
    end
     
     
    RunService:UnbindFromRenderStep'NOL';
     
    RunService:BindToRenderStep('NOL', 0, function()
        if Enabled and tick() - LastCheck > 2.5 / 8 then
            LastCheck     = tick();
            NearestObject = GetNearestObject();
        end
    end)
end)
end)
D:Toggle("Health Bars", false, function(bool)
_G.IsOn = true

local Players = game:GetService("Players")

while wait() do
   for i,v in pairs(Players:GetPlayers()) do
       if _G.IsOn then
           v.NameDisplayDistance = 100
           v.HealthDisplayDistance = 50
           elseif not _G.IsOn then
           v.NameDisplayDistance = 50
           v.HealthDisplayDistance = 0
       end
   end
end
end) 
E:Button("Illusionist Detector", function()
local function newSound()
    local Sound = Instance.new("Sound", game.Players.LocalPlayer.PlayerGui)
    Sound.SoundId = "rbxassetid://6696469190"
    Sound.Volume = 10
    Sound:Play()
    Sound.Ended:connect(function()
        Sound:Destroy()
    end)
end

local Bindable = Instance.new("BindableFunction")
local StaterGui = game:GetService("StarterGui")

function Bindable.OnInvoke(response)
    if response == "Leave" then
        game.Players.LocalPlayer:Kick("Illusionist Detected")
    elseif response == "Ignore" then
        return
    end
end

for i,v in pairs(game.Players:GetPlayers()) do
    if v.Backpack:FindFirstChild("Observe") then
        newSound()
        StaterGui:SetCore("SendNotification",{
        Title = "Illusionist Notification",
        Text = "Illusionist has been detected: "..v.Name,
        Duration = 10,
        Callback = Bindable,    
        Button1 = "Ignore",
        })
    end
end
game.Players.PlayerAdded:Connect(function(Player)
    wait(.1)
    if Player.Backpack:FindFirstChild("Observe") then
        newSound()
        StaterGui:SetCore("SendNotification",{
        Title = "Illusionist Notification",
        Text = "Illusionist has been detected: "..Player.Name,
        Duration = 10,
        Callback = Bindable,    
        Button1 = "Ignore",
        })
    end
end)
end)
E:Button("Moderator Detector", function()
local Mods = {
    ["Ciesu"] = true,
    ["gabossjx"] = true,
    ["Efe_Hing2020"] = true,
    ["Grimkid24"] = true,
    ["Slippery08"] = true,
    ["WarDevourerr"] = true,
    ["RagoozerCombo"] = true,
    ["timothywolf"] = true,
    ["freshpotatoboi80"] = true,
    ["LawsWasTaken"] = true,
    ["ShizzlesAnimosity"] = true,
    ["jao6on"] = true,
    ["Jman4637"] = true,
}
 
local function newSound()
    local Sound = Instance.new("Sound", game.Players.LocalPlayer.PlayerGui)
    Sound.SoundId = "rbxassetid://6696469190"
    Sound.Volume = 10
    Sound:Play()
    Sound.Ended:connect(function()
        Sound:Destroy()
    end)
end
 
for k,v in pairs(game.Players:GetChildren()) do
    if Mods[v.Name] then
        newSound()
        game:GetService("StarterGui"):SetCore("SendNotification", {
           Title = "Moderator Notification",
           Text =  "A moderator has been detected: "..v.Name,
           Duration = 10,
        })
    end
end
 
game.Players.PlayerAdded:connect(function(Player)
    if Mods[Player.Name] then
        newSound()
        game:GetService("StarterGui"):SetCore("SendNotification", {
           Title = "Moderator Notification",
           Text =  "A moderator has been detected: "..v.Name,
           Duration = 10,
        })
    end
end)
 
game.Players.PlayerRemoving:connect(function(Player)
    if Mods[Player.Name] then
        StaterGui:SetCore("SendNotification",{
        Title = "Moderator Notification",
        Text = "Moderator has left your server: "..v.Name,
        Duration = 10,
        Callback = Bindable,
        })
    end
end)
end)
E:Button("Collector", function()
fireclickdetector(Workspace.NPCs.Collector.ClickDetector)    
end)    
E:Toggle("Spectate", false, function()
local PlayerGui = game:GetService('Players').LocalPlayer:WaitForChild('PlayerGui')
local Leaderboard = PlayerGui:WaitForChild("LeaderboardGui")
local MainFrame = Leaderboard:WaitForChild("MainFrame")
local ScrollingFrame = MainFrame:WaitForChild("ScrollingFrame")

function createButtons()
    for i,v in pairs(ScrollingFrame:GetChildren()) do
        local Player
        local TextButton = Instance.new("TextButton",ScrollingFrame)
        TextButton.Name = "SpectateButton"
        TextButton.Size = v.Size
        TextButton.Text = ""
        TextButton.Transparency = 1
        TextButton.Position = v.Position
        TextButton.MouseButton1Click:Connect(function()
            for _,otherPlayer in pairs(game.Players:GetPlayers()) do
                if otherPlayer.Name == v.Text:gsub(" ","") then
                    Player = otherPlayer
                end
            end
            local Character = Player.Character or Player.CharacterAdded:Wait()
            workspace.CurrentCamera.CameraSubject = Character.Humanoid
        end)
    end
end

while wait(1) do
    for i,v in pairs(ScrollingFrame:GetChildren()) do
        if v.Name == "SpectateButton" then
            v:Destroy()
        end
    end
    createButtons()
end    
end)    

library:Keybind("P")
else
   game.Players.LocalPlayer:Kick("zlO")
end
